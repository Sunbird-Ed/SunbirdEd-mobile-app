{
  "$schema": "./node_modules/@angular-devkit/core/src/workspace/workspace-schema.json",
  "version": 1,
  "defaultProject": "app",
  "newProjectRoot": "projects",
  "projects": {
    "app": {
      "root": "",
      "sourceRoot": "src",
      "projectType": "application",
      "prefix": "app",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@angular-builders/custom-webpack:browser",
          "options": {
            "outputPath": "www",
            "index": "src/index.html",
            "customWebpackConfig": {
              "path": "config/webpack.config.js"
            },
            "main": "src/main.ts",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "src/tsconfig.app.json",
            "assets": [
              {
                "glob": "**/*",
                "input": "src/assets",
                "output": "assets"
              },
              {
                "glob": "**/*.svg",
                "input": "node_modules/ionicons/dist/ionicons/svg",
                "output": "./svg"
              },
              {
                "glob": "**/*",
                "input": "content-player",
                "output": "content-player"
              },
              {
                "glob": "**/*.*",
                "input": "./node_modules/@project-sunbird/common-consumption-v8/assets",
                "output": "./assets/common-consumption"
              },
              {
                "glob": "**/*",
                "input": "node_modules/@project-sunbird/sunbird-pdf-player-v8/lib/assets/",
                "output": "/assets/"
              },
              {
                "glob": "**/*.*",
                "input": "./node_modules/@project-sunbird/discussions-ui-v8/assets",
                "output": "./assets/discussion-ui"
              },
              {
                "glob": "**/*",
                "input": "./node_modules/@project-sunbird/sunbird-quml-player-v8/lib/assets/",
                "output": "/assets/"
              },
              {
                "glob": "**/*",
                "input": "./node_modules/@project-sunbird/sunbird-video-player-v8/lib/assets/",
                "output": "/assets/"
              }
            ],

            "sourceMap": {
              "scripts": true,
              "styles": true,
              "vendor": true
            },
            "styles": [
              "src/assets/styles/quml-styles/quml-carousel.css",
              "node_modules/katex/dist/katex.min.css",
              "node_modules/video.js/dist/video-js.min.css",
              "node_modules/@project-sunbird/sb-styles/assets/_styles.scss",
              "node_modules/@project-sunbird/discussions-ui-v8/assets/styles/global.scss",
              {
                "input": "src/global.scss"
              }
            ],
            "scripts": [
              "node_modules/@project-sunbird/telemetry-sdk/index.js",
              "node_modules/epubjs/dist/epub.js",
              "node_modules/katex/dist/katex.min.js"
            ],
            "es5BrowserSupport": true,
            "preserveSymlinks": true
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "src/configuration/configuration.ts",
                  "with": "src/configuration/configuration.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "7mb"
                }
              ]
            },
            "hmr": {
              "fileReplacements": [
                {
                  "replace": "src/configuration/configuration.ts",
                  "with": "src/configuration/configuration.hmr.ts"
                }
              ]
            },
            "debug": {
              "fileReplacements": [
                {
                  "replace": "src/configuration/configuration.ts",
                  "with": "src/configuration/configuration.debug.ts"
                }
              ]
            },
            "ci": {
              "progress": false
            }
          }
        },
        "serve": {
          "builder": "@angular-builders/dev-server:generic",
          "options": {
            "browserTarget": "app:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "app:build:production"
            },
            "hmr": {
              "hmr": true,
              "browserTarget": "app:build:hmr"
            },
            "ci": {
              "progress": false
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "app:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "src/test.ts",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "src/tsconfig.spec.json",
            "karmaConfig": "src/karma.conf.js",
            "styles": [],
            "scripts": [],
            "assets": [
              {
                "glob": "favicon.ico",
                "input": "src/",
                "output": "/"
              },
              {
                "glob": "**/*",
                "input": "src/assets",
                "output": "/assets"
              }
            ]
          },
          "configurations": {
            "ci": {
              "progress": false,
              "watch": false
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["src/tsconfig.app.json", "src/tsconfig.spec.json"],
            "exclude": ["**/node_modules/**"]
          }
        },
        "ionic-cordova-build": {
          "builder": "@ionic/angular-toolkit:cordova-build",
          "options": {
            "browserTarget": "app:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "app:build:production"
            },
            "hmr": {
              "browserTarget": "app:build:hmr"
            }
          }
        },
        "ionic-cordova-serve": {
          "builder": "@ionic/angular-toolkit:cordova-serve",
          "options": {
            "cordovaBuildTarget": "app:ionic-cordova-build",
            "devServerTarget": "app:serve"
          },
          "configurations": {
            "production": {
              "cordovaBuildTarget": "app:ionic-cordova-build:production",
              "devServerTarget": "app:serve:production"
            },
            "hmr": {
              "cordovaBuildTarget": "app:ionic-cordova-build:hmr",
              "devServerTarget": "app:serve:hmr"
            }
          }
        }
      }
    },
    "app-e2e": {
      "root": "e2e/",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@angular-devkit/build-angular:protractor",
          "options": {
            "protractorConfig": "e2e/protractor.conf.js",
            "devServerTarget": "app:serve"
          },
          "configurations": {
            "ci": {
              "devServerTarget": "app:serve:ci"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": "e2e/tsconfig.e2e.json",
            "exclude": ["**/node_modules/**"]
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@ionic/angular-toolkit"
  },
  "schematics": {
    "@ionic/angular-toolkit:component": {
      "styleext": "scss"
    },
    "@ionic/angular-toolkit:page": {
      "styleext": "scss"
    },
    "@schematics/angular:component": {
      "styleext": "scss"
    }
  }
}
